[project]
name = "unifill-datafetch"
version = "0.1.1"
description = "downloads and process unicode data into a format that can be used by unifill."
authors = [{ name = "Arthur Debert", email = "arthur@debert.xyz" }]
readme = "README.txt"
requires-python = ">=3.9"
license = { file = "LICENSE" }
keywords = ["documentation", "bundler", "minimalist", "text", "prompts"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Topic :: Documentation",
    "Topic :: Text Processing :: Markup",
]

# Dependencies
dependencies = [
    "requests (>=2.32.3,<3.0.0)",
    "click (>=8.1.3,<9.0.0)"
]


[project.scripts]
unidata = "unifill_datafetch.__main__:main"

[project.urls]
Homepage = "https://github.com/arthur-debert/univim/"
Repository = "https://github.com/arthur-debert/univim/"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{ include = "unifill_datafetch", from = "src" }]
include = ["bin/**/*", "README.txt", "LICENSE"]
exclude = ["**/*.lua", "**/*.csv", "**/*.txt"]


[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
exclude = '/(\.git|\.hg|\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist)/'

[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
